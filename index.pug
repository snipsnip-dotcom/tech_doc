html
  body
    main#main-doc
      h1#title WEB DEVELOPMENT
      nav#navbar
        h1 TOPICS
        header.onehead Navigation
        hr.ruler
        ul.lists
          li
            a.nav-link(href='#Web_Dev') Web Dev
          li
            a.nav-link(href='#Dev_Tools') Dev Tools
          li
            a.nav-link(href='#HTML') HTML
          li
            a.nav-link(href='#PUG') Pug
          li
            a.nav-link(href='#CSS') CSS
          li
            a.nav-link(href='#SASS') SASS
          li
            a.nav-link(href='#Javascript') Javascript
          li
            a.nav-link(href='#Roadmap') Roadmap
            
      section.main-section#Web_Dev
        header
          h2 Web Dev
        p.content
        | Web development is the building and maintenance of websites; it’s the work that happens behind the scenes to make a website look great, work fast and perform well with a seamless user experience.
        p
        | Web developers, or ‘devs’, do this by using a variety of coding languages. The languages they use depends on the types of tasks they are preforming and the platforms on which they are working.
        br
        br
        code
         | function greetMe(yourName) { alert("Hello " + yourName); }
         | greetMe("World");
        
      section.main-section#Dev_Tools
        header
          h2 Dev Tools
        p.content
        | Chrome DevTools is a set of web developer tools built directly into the Google Chrome browser. DevTools can help you edit pages on-the-fly and diagnose problems quickly, which ultimately helps you build better websites, faster.
        p.
        | The DevTools UI can be a little overwhelming... there are so many tabs! But, if you take some time to get familiar with each tab to understand what's possible, you may discover that DevTools can seriously boost your productivity.
        
         
      section.main-section#HTML
        header
          h2 HTML
        p.content
        | The HyperText Markup Language, or HTML is the standard markup language for documents designed to be displayed in a web browser. It can be assisted by technologies such as Cascading Style Sheets (CSS) and scripting languages such as JavaScript.
        br
        ul
          li  Properties Reference
          li Selectors Reference
          li Functions Reference
          li  CSS Animatable Reference
          li Internship References
          
      section.main-section#PUG
        header
          h2 PUG
        p.content
        | This is where Pug comes in. Pug is a template engine for Node and for the browser. It compiles to HTML and has a simplified syntax, which can make you more productive and your code more readable. Pug makes it easy both to write reusable HTML, as well as to render data pulled from a database or API.
        br
        | In this guide, I’ll demonstrate how to get up and running with Pug. We’ll start by installing it from npm, go over its basic syntax and then look at several examples of using JavaScript in Pug. Finally, we’ll explore a couple of Pug’s more advanced features by building a simple Node/Express project which uses Pug as its template engine.
        br
        br
        code
         | function greetMe(yourName) { alert("Hello " + yourName); }
         | greetMe("World");
          
      section.main-section#CSS
        header
          h2 CSS
        p.content
        | Cascading Style Sheets (CSS) is a style sheet language used for describing the presentation of a document written in a markup language such as HTML.CSS is a cornerstone technology of the World Wide Web, alongside HTML and JavaScript.
        br
        | CSS is designed to enable the separation of presentation and content, including layout, colors, and fonts. This separation can improve content accessibility, provide more flexibility and control in the specification of presentation characteristics.
        
      section.main-section#SASS
        header
          h2 SASS
        p.content
        | The most direct way to make this happen is in your terminal. Once Sass is installed, you can compile your Sass to CSS using the sass command. You'll need to tell Sass which file to build from, and where to output CSS to.
        br
        | You can also watch individual files or directories with the --watch flag. The watch flag tells Sass to watch your source files for changes, and re-compile CSS each time you save your Sass.
        br
        br
        code
         | function greetMe(yourName) { alert("Hello " + yourName); }
         | greetMe("World");
         
      section.main-section#Javascript
        header
          h2 Javascript
        p.content
        | The standards for JavaScript are the ECMAScript Language Specification (ECMA-262) and the ECMAScript Internationalization API specification (ECMA-402). The JavaScript documentation throughout MDN is based on the latest draft versions of ECMA-262.
        br
        | Do not confuse JavaScript with the Java programming language. Both "Java" and "JavaScript" are trademarks or registered trademarks of Oracle in the U.S.
        br
        br
        code
         | function greetMe(yourName) { alert("Hello " + yourName); }
         | greetMe("World");
         
      section.main-section#Roadmap
        header
          h2 Roadmap
        p.content
        | Now that I've worked in the industry for 4 years, I want to share with you how I would start to learn Web Development in 2021. In this article, I will show you every step that you can take from a beginner to become a developer.
        br
        | I will start with some Essential Tools that you should know, then cover the Programming Languages and Libraries/Frameworks that you need to learn to become a Front-end or a Full-stack Developer.
        br
        br
        code
         | function greetMe(yourName) { alert("Hello " + yourName); }
         | greetMe("World");
